version: 2
jobs:

  build_images:
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      SCRATCH: "/scratch"
    docker:
      - image: docker:18.01.0-ce-git
    working_directory: /home/circleci/fmriprep
    steps:
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ epoch }}
            - docker-v1-{{ .Branch }}-
            - docker-v1-
          paths:
            - /tmp/cache/docker.tar.gz
            - /tmp/cache/ubuntu.tar.gz
      - checkout:
          path: /home/circleci/fmriprep
      - run:
          name: Update fMRIPrep version
          command: |
            if [ "${CIRCLE_TAG}" != "" ]; then
              sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG}'/" fmriprep/info.py
              sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG}'/" wrapper/fmriprep_docker.py
              sed -i -E "s/(var version = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG}'/" docs/citing.rst
            fi
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            docker info
            set +o pipefail
            docker load -i /tmp/cache/ubuntu.tar.gz | true
            docker load -i /tmp/cache/docker.tar.gz | true
            docker images
      # - run:
      #     name: Pull ubuntu:xenial-20161213
      #     no_output_timeout: 60m
      #     command: docker pull ubuntu:xenial-20161213 || true

      - run:
          name: Build Docker image
          no_output_timeout: 60m
          command: |
            e=1 && for i in {1..5}; do
              docker build \
                --cache-from=poldracklab/fmriprep \
                --rm=false \
                -t poldracklab/fmriprep:latest \
                --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                --build-arg VCS_REF=`git rev-parse --short HEAD` \
                --build-arg VERSION=${CIRCLE_TAG:-latest} . \
              && e=0 && break || sleep 15
            done && [ "$e" -eq "0" ]

      - run:
          name: Docker save
          no_output_timeout: 20m
          command: |
            mkdir -p /tmp/cache
            docker save ubuntu:xenial-20161213 | gzip -1 > /tmp/cache/ubuntu.tar.gz
            docker save poldracklab/fmriprep:latest \
            | gzip -1 > /tmp/cache/docker.tar.gz

      - persist_to_workspace:
          root: /tmp
          paths:
            - cache/ubuntu.tar.gz
            - cache/docker.tar.gz

  update_cache:
    machine:
      # Ubuntu 14.04 with Docker 17.10.0-ce
      image: circleci/classic:201711-01
    working_directory: /home/circleci/fmriprep
    steps:
      - attach_workspace:
          at: /tmp
      - save_cache:
         key: docker-v1-{{ .Branch }}-{{ epoch }}
         paths:
            - /tmp/cache/docker.tar.gz
            - /tmp/cache/ubuntu.tar.gz

  test_pytest:
    machine:
      image: circleci/classic:201711-01
    working_directory: /home/circleci/fmriprep
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load saved Docker images.
          no_output_timeout: 60m
          command: |
            set +o pipefail
            docker load -i /tmp/cache/ubuntu.tar.gz | true
            docker load -i /tmp/cache/docker.tar.gz | true
            docker images
      - checkout:
          path: /home/circleci/fmriprep
      - run:
          name: Run fMRIPrep tests
          no_output_timeout: 2h
          environment:
            WORKDIR: /home/circleci/work
          command: |
            docker run -ti --rm=false \
              --entrypoint="/usr/local/miniconda/bin/py.test" \
              poldracklab/fmriprep:latest . \
              --doctest-modules --ignore=docs --ignore=setup.py
      - store_artifacts:
          path: /home/circleci/out/tests

  build_docs:
    machine:
      image: circleci/classic:201711-01
    working_directory: /home/circleci/fmriprep
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load saved Docker images.
          no_output_timeout: 60m
          command: |
            set +o pipefail
            docker load -i /tmp/cache/ubuntu.tar.gz | true
            docker load -i /tmp/cache/docker.tar.gz | true
            docker images
      - checkout:
          path: /home/circleci/fmriprep
      - run:
          name: Run fMRIPrep tests
          no_output_timeout: 2h
          environment:
            WORKDIR: /home/circleci/work
          command: |
            mkdir -p /home/circleci/out/docs
            docker run -ti --rm=false -v $HOME/docs:/_build_html \
              --entrypoint=sphinx-build poldracklab/fmriprep:latest \
              -T -E -b html -d _build/doctrees-readthedocs -W -D \
              language=en docs/ /_build_html 2>&1 \
              | tee /home/circleci/out/docs/builddocs.log
            cat /home/circleci/out/docs/builddocs.log
            if grep -q "ERROR" /home/circleci/out/docs/builddocs.log; then false; else true; fi
      - store_artifacts:
          path: /home/circleci/out/docs

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_images
      - update_cache:
          requires:
            - build_images
      - test_pytest:
          requires:
            - build_images
      - build_docs:
          requires:
            - build_images
